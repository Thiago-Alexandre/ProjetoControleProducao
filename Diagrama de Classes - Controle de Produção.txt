@startuml

title Controle de Produção - Class Diagram

abstract class Material{
  -Inteiro id
  -Texto codigo
  -Texto nome
  -Texto descricao
  -Decimal valorUnitario
  -Decimal qtdEstoque
  +atualizarEstoque(Decimal, Boleano)
}

class Produto{
  +calcularMediaCusto(Lista<Producao>): Decimal
}

class MateriaPrima{}

class Producao {
  -Inteiro id
  -Texto codigo
  -Produto produto
  -Lista<Processo> processos
  -Decimal qtdProduzida
  -Boleano finalizada
}

class MateriaUsada{
  -Inteiro id
  -MateriaPrima materiaPrima
  -Decimal qtdUsada
}

class Processo{
  -Inteiro id
  -TipoProcesso tipo
  -Lista<MateriaUsada> materiasPrimas
  -Lista<Funcionario> funcionarios
  -Supervisor supervisor
  -Tempo horaInicial
  -Tempo horaFinal
  -Boleano aprovado
}

interface RecursoGasto{
  +calcularTempoTotal(): Tempo
  +calcularCustoTotal(): Decimal
}

class TipoProcesso{
  -Inteiro id
  -Texto codigo
  -Texto nome
  -Texto descricao
}

class Funcionario{
  -Inteiro id
  -Texto nome
  -Cargo cargo
}

class Supervisor{
  +aprovarProcesso(Processo)
}

class Cargo{
  -Inteiro id
  -Texto nome
}

note left of Material : Este modelo não implementa o controle de Compra de MateriaPrima\n e nem a Venda de Produto, mas o método atualizarEstoque() pode\n ser utilizado normalmente caso esses módulos forem implementados.

note top of Material : MateriaPrima e Produto apresentam atributos \ne métodos em comum, ou seja, eles são um \ntipo de Material, que é uma classe abstrata.

note "Produto e MateriaPrima serão objetos pré-cadastrados \nno sistema, sendo utilizados pela Produção e Processo. \nAssim, é possível cadastrar um Produto ou MateriaPrima \ne não existir uma Produção deste Produto e nem o uso \nda MateriaPrima." as N1
Produto .. N1
N1 .. MateriaPrima

note "Cargo e TipoProcesso serão objetos pré-cadastrados \nno sistema, sendo utilizados pelo Funcionario e Processo." as N2
Cargo .. N2
N2 .. TipoProcesso

note bottom of MateriaUsada : MateriaUsada indica qual MateriaPrima foi gasta e a quantidade\n usada, para realizar o controle de estoque. Caso o Processo ou\n a Producao sejam excluídos, a MateriaUsada também será, mas\n a MateriaPrima continuará cadastrada no sistema.

note bottom of Supervisor: Supervisor é um tipo específico de Funcionario.

note left of Processo: Caso a Producao seja excluída, o Processo também deixará de existir.

note left of RecursoGasto: A Interface RecursoGasto compreende métodos\n com o mesmo tipo de retorno utilizados pela\n Producao e pelo Processo, mas implementados\n de forma diferente.

RecursoGasto <|.. Processo
RecursoGasto <|.. Producao

Material <|-- Produto
Material <|-- MateriaPrima

Producao "1,*" o-- "1" Produto
Producao "1" *-- "1,*" Processo

MateriaUsada "0,*" o-- "1" MateriaPrima

Funcionario "0,*" o-- "1" Cargo
Funcionario <|-- Supervisor

Processo "0,*" o-- "1" TipoProcesso
Processo "1" *-- "0,*" MateriaUsada
Processo "0,*" o-- "1,*" Funcionario
Processo "0,*" o-- "1" Supervisor

@enduml