@startuml

title Controle de Produção - Class Diagram

abstract class Material{
  -Inteiro id
  -Texto nome
  -Texto descricao
  -Decimal quantidadeEstoque
  -Decimal valorUnitario
  +atualizarEstoque(Decimal, Boleano)
}

class Produto{
  -Decimal valorVenda
  +calcularValorProducao(): Decimal
  +calcularValorVenda(): Decimal
}

class MateriaPrima{
  -Texto fornecedor
}

class TipoProcesso{
  -Inteiro id
  -Texto nome
  -Texto descricao
}

class Cargo{
  -Inteiro id
  -Texto nome
}

class Funcionario{
  -Inteiro id
  -Texto nome
}

class MaterialUsado{
  -Inteiro id
  -Decimal quantidadeUsada
}

class Processo{
  -Inteiro id
  -Tempo horaInicial
  -Tempo horaFinal
  -Boleano aprovado
  +finalizarProcesso(Boleano)
}

class FuncionarioNoProcesso{
  -Integer id
}

class Producao {
  -Inteiro id
  -Decimal qtdProduzida
  -Boleano finalizada
}

interface RecursoGasto{
  +calcularTempoTotal(): Tempo
  +calcularCustoTotal(): Decimal
}

note "Este modelo não implementa o controle de Compra de MateriaPrima \ne nem a Venda de Produto, mas o método atualizarEstoque() pode \nser utilizado normalmente caso esses módulos forem implementados." as N0

note left of Material : MateriaPrima e Produto apresentam atributos e métodos em comum, \nou seja, eles são um tipo de Material, que é uma classe abstrata.

note "Produto e MateriaPrima serão objetos pré-cadastrados no sistema, \nsendo utilizados pela Produção e Processo. Assim, é possível \ncadastrar um Produto ou MateriaPrima e não existir uma Produção \ndeste Produto e nem o uso da MateriaPrima." as N1
Produto .. N1
N1 .. MateriaPrima

note bottom of TipoProcesso : Será pré-cadastrado no sistema, sendo utilizado pelo Processo.

note top of MaterialUsado : Indica qual Material foi gasto e a quantidade que foi utilizada, \npara realizar o controle de estoque do Material. É referenciado \num Material porque um Produto produzido também pode ser usado na \nprodução de um novo Produto. Caso o Processo ou a Producao sejam \nexcluídos, o MaterialUsado também será, mas o Material continuará \ncadastrado no sistema.

note top of Processo : Caso a Producao seja excluída, o Processo também deixará de existir.

note top of RecursoGasto : Compreende métodos com o mesmo tipo de retorno utilizados pela \nProducao e pelo Processo, mas implementados de forma diferente.

RecursoGasto <|.. Processo
RecursoGasto <|.. Producao

Material <|-- Produto
Material <|-- MateriaPrima

Producao "produto" *-- Produto

Funcionario "cargo" *-- Cargo

Processo "supervisor" *-- Funcionario
Processo "tipo" *-- TipoProcesso
Processo "producao" *-- Producao

MaterialUsado "material" *-- Material
MaterialUsado "processo" *-- Processo

FuncionarioNoProcesso "funcionario" *-- Funcionario
FuncionarioNoProcesso "processo" *-- Processo

@enduml